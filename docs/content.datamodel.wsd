@startuml Content DataModel

package Identity {

  class Whitelabel {
    +name
    +slug
    +description
    +urls: Metadata[]
    ..Media..
    -image256x256
    -image400x400
  }

  class Channel {
    +name
    +slug
    +whitelabel
    ..Media..
    +image256x256
    +status: created | active | published | restriced
    ..
    +playlists: Playlist[]
  }

  Whitelabel -down-* Channel

  class User {
    +email
    +name
    -taxId
    -phone
    -providerExtra: ProviderExtra[]
    +status: created | active
    ..Media..
    +image128x128
    ..Permissions..
    +whitelabel
    +devices: Devices[]
    +scopes: Scope[]
    ..Assessments..
    -wizard: Response[]
    -certificates: Certificate[]
    ..
    -contentExtra: Metadata[]
    ..Purchases..
    -subscriptions: Subscription[]
    -courses: Course[]
    -channels: Channel[]
    -transactions: Transaction[]
    ..Playlist..
    -favoritePlaylist: Playlist
    -suggestPlaylist: Playlist
  }

  class Device {
    +name
    +fingerprint
    ..
    +user: User
  }

  class Mfa {
    +key: email | phone
    +value
    +code
    -fingerprint
    ..
    -dateEnd: Date
    ..
    +device: Device
  }

  User --* Device
  Device -right-* Mfa

}

package Finance {

  class Transaction {
    +type: \n | purchase \n | subscription \n | split \n | p2p \n | refund \n | withdraw \n | deposit
    +description
    +asset: Asset
    ..
    +whitelabel: Whitelabel
    +userFrom: User
    +userTo: User
    ..
    -parent: Transaction
    .. Provider ..
    +providerExtra: ProviderExtra[]
    ..
    +productId
    +productType: platform | channel
    ..
    value
    status: \n | created \n | canceled \n | approved \n | provider.user.created \n | provider.payment.created \n | provider.payment.paid \n | provider.payment.failed \n | paid \n | failed
  }

  together {
    class Plan {
      +productId
      +productType: platform | channel
      +name
      +value
      +whitelabel
      +contract: Contract
      +months: integer
      ..Provider..
      +providerExtra: ProviderExtra[]
      +status: \n | created \n | provider.plan.created \n | active
    }

    class Subscription {
      ..Plan..
      +productId
      +productType: platform | channel
      +name
      +value
      +whitelabel
      +contract: Contract
      +months: integer
      ..
      +dateStart: Date
      +dateEnd: Date
      +status: \n | created \n | provider.subscription.created \n | active \n | provider.subscription.canceled \n | canceled 
      ..Provider..
      +providerExtra: ProviderExtra[]
      ..
      +user: User
    }

    Plan -down-* Subscription
  }

  class Coupom {
    +code
    -quantity: number
    ..Product..
    +productType: platform | channel | course
    -productId
    ..Status..
    +status: \n | created \n | active \n | unavaliable
    -value: number
    -percentage: number
  }

  together {
    class Contract {
      +name
      +whitelabel
      +items: ContractItem[]
    }

    class ContractItem {
      +scopeKey: \n | domain \n | whitelabel \n | producer \n | mentor \n | affiliate
      -scopeValue
      ..Purchase..
      +percentage: Number
      +value: Number
      ..
      -children: ContractItem[]
    }

    Contract -down-* ContractItem
  }

}

package Contents {

  class Playlist {
    +name
    ..Media..
    -image256x256
    ..
    +courses: Course[]
  }

  class Course {
    +name
    +slug
    +description
    ..
    +whitelabel
    +tags
    +producer: User
    +channel: Channel
    +contract: Contract
    ..Media..
    +image400x512
    +image1272x203
    +image1440x720
    ..Dates..
    +status: created | active
    -dateStart: Date
    -dateEnd: Date
    ..Purchase..
    +value
    +paymentStart: Date
    +paymentEnd: Date
    ..Assessments..
    +evaluationForm: Form
    +contents: Content[]
    +comments: Response[]
    ..Calc..
    {abstract} #open: boolean
  }

  class Content {
    +type: video | meet | live
    +name
    +slug
    +description
    ..Media..
    +image144x80
    +image1440x720
    +video1920x1080
    -items: ContentItem[]
    ..Provider..
    +provider: Provider
    -providerExtra: ProviderExtra[]
    ..Dates..
    -dateStart: Date
    -dateEnd: Date
    ..Assessments..
    -testForm: Form
    +commentForm: Form
    -reactions: Response[]
    ..Calc..
    {abstract} #open: boolean
    {abstract} #live: boolean
  }

  class ContentItem {
    +type: download | link
    +name
    +description
    ..Media..
    +image50x50
    +resourceUrl
  }

  Course -right-* Content
  Course *-down- Playlist
  Content -down-* ContentItem

}

package Assessment {

  together {
    class Form {
      +name
      -description
      ..
      +questions: Question[]
    }

    class Question {
      +name
      -description
      ..Media..
      -image600x400
    }

    class Response {
      +question: Question
      ..
      +value
      ..
      -reactions: Response[]
      ..
      +user: User
    }
  }

  Form -l-* Question
  Question -l-* Response

  together {
    class Certificate {
      +type: \n | passport \n | course \n | stage
      +productId: string
      +user: User
      ..Media..
      +image1000x1000
    }

    class PageView {
      +productId
      +productType
      ..Metrics..
      -mediaStart
      -mediaEnd
      -mediaCount
      ..
      +user: User
    }
  }

}

package Base {

  abstract Entity<extends T, Status> {
    +owner: User
    ..Dates..
    +timestamp: Date
    +createAt: Date
    +updateAt: Date
    ..Status..
    +status: Status
    +statusAt: Date
    -statusTo: Status
    ..Logs..
    +_history: T[]
    +_status: StatusHistory<Status>[]
  }

  abstract StatusHistory<Status> {
    +statusFrom: Status
    +statusTo: Status
    -reason: string
    +success: boolean
    +timestamp: Date
  }

  enum Provider {
    .. Content ..
    FPASS
    OUROMODERNO
    SPACENEEDLE
    .. Payment ..
    RECEBAFACIL
    BLITZPAY
    COGNA
  }

  abstract ProviderExtra<extends Metadata> {
    +provider: Provider
  }

  abstract Metadata {
    +key
    +value
    +timestamp: Date
  }

}

@enduml
